{"version":3,"sources":["images/1.png","hooks/ReduxHooks.ts","modal/modalSearchAnime.ts","store/Reducers/SearchReducer.ts","view/AppBar/HeaderStyled.ts","view/AppBar/Header.tsx","view/Body/ViewCard/ViewCard.tsx","view/Body/AnimePage.tsx","store/Reducers/PageReducer.ts","view/Body/Body.tsx","view/SideBar/SideBar.tsx","App.tsx","store/Store.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","searchAnimeData","createAsyncThunk","thunkAPI","a","searchValue","searchField","axios","method","baseURL","timeout","response","data","rejectWithValue","getAnimeData","_","getCategories","initialState","value","animeData","loading","error","categories","undefined","SearchReducer","createSlice","name","reducers","changeValueSearch","state","action","payload","extraReducers","fulfilled","type","pending","rejected","actions","Search","styled","theme","shape","borderRadius","alpha","palette","common","white","backgroundColor","breakpoints","up","marginLeft","spacing","width","SearchIconWrapper","padding","height","position","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","MediaIconButton","IconButton","Header","search","dispatch","Box","sx","flexGrow","AppBar","background","Toolbar","size","edge","color","aria-label","mr","Typography","variant","noWrap","component","xs","sm","onChange","e","target","onKeyUp","key","trim","placeholder","inputProps","cardStyle","actionArea","flexDirection","ViewCard","img","title","startDate","id","element","onPage","Card","onClick","flex","style","textDecoration","to","CardActionArea","src","CardContent","gutterBottom","MemoViewCard","memo","AnimePage","episodeCount","Paper","marginRight","currentPage","PageReducer","getCurrentPage","BodyContainer","text","secondary","boxShadow","flexWrap","gap","Body","animePage","Cards","map","el","attributes","posterImage","small","titles","en","useEffect","left","top","LinearProgress","path","SideBarContainer","SideBar","showCategories","ListItemButton","ListItemText","List","styles","paddingTop","backgroundImage","bgImg","backgroundSize","backgroundRepeat","backgroundAttachment","backgroundPosition","App","Container","maxWidth","Grid","container","item","store","configureStore","reducer","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.f28c94ab.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1.9bf76863.png\";","import {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux';\nimport {AppDispatch, RootState} from '../store/Store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import axios from 'axios';\nimport {createAsyncThunk} from '@reduxjs/toolkit';\nimport {searchAnimeArgs} from './types';\n\nexport const searchAnimeData = createAsyncThunk(\n    'anime/searchData',\n    async ([searchValue, searchField] : searchAnimeArgs, thunkAPI) =>{\n      try {\n        const response = await axios({\n          method: 'get',\n          baseURL: `https://kitsu.io/api/edge/anime?filter[${searchField}]=${searchValue}&page[limit]=9&page[offset]=0`,\n          timeout: 5000,\n        });\n        return response.data.data;\n      } catch (e) {\n        return thunkAPI.rejectWithValue('Anime not found');\n      }\n    },\n);\n\nexport const getAnimeData = createAsyncThunk(\n    'anime/searchData',\n    async (_, thunkAPI) =>{\n      try {\n        const response = await axios({\n          method: 'get',\n          baseURL: `https://kitsu.io/api/edge/anime?page[limit]=9&page[offset]=0`,\n        });\n        return response.data.data;\n      } catch (e) {\n        return thunkAPI.rejectWithValue('Anime not found');\n      }\n    },\n);\n\nexport const getCategories = createAsyncThunk(\n    'anime/categories',\n    async (_, thunkAPI) => {\n      try {\n        const response = await axios({\n          method: 'get',\n          baseURL: 'https://kitsu.io/api/edge/categories?page[limit]=20',\n        });\n        return response.data;\n      } catch (e) {\n        return thunkAPI.rejectWithValue('Categories not found');\n      }\n    },\n);\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {getAnimeData, getCategories, searchAnimeData} from '../../modal/modalSearchAnime';\n\nexport type animeDataType = [{\n  id: string,\n  attributes: {\n    description: string,\n    titles: {\n      en: string\n    }\n    canonicalTitle: string,\n    startDate: string,\n    popularityRank: number,\n    posterImage: {\n      small: string,\n      medium: string,\n      original: string\n    },\n    episodeCount: number\n  }\n}] | []\n\n\ntype SearchReducerTypes = {\n  value : string\n  animeData: animeDataType\n  loading : boolean\n  error: string\n  categories: {\n    data : [{\n      id: string,\n      attributes: {\n        title: string\n      }\n    }]\n  } | undefined\n}\n\nconst initialState : SearchReducerTypes = {\n  value: '',\n  animeData: [],\n  loading: false,\n  error: '',\n  categories: undefined,\n\n};\n\n\nexport const SearchReducer = createSlice({\n  name: 'search',\n  initialState,\n  reducers: {\n    changeValueSearch: (state, action : PayloadAction<string>) => {\n      state.value = action.payload;\n    },\n  },\n  extraReducers: {\n    [searchAnimeData.fulfilled.type]: ( state, action : PayloadAction<animeDataType>) => {\n      state.loading = false;\n      state.error = '';\n      state.animeData = action.payload;\n    },\n    [searchAnimeData.pending.type]: ( state, action : PayloadAction<animeDataType>) => {\n      state.loading = true;\n    },\n    [searchAnimeData.rejected.type]: ( state, action : PayloadAction<string>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    [getAnimeData.fulfilled.type]: ( state, action : PayloadAction<animeDataType>) => {\n      state.loading = false;\n      state.error = '';\n      state.animeData = action.payload;\n    },\n    [getAnimeData.pending.type]: ( state, action : PayloadAction<animeDataType>) => {\n      state.loading = true;\n    },\n    [getAnimeData.rejected.type]: ( state, action : PayloadAction<string>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    [getCategories.fulfilled.type]: (state, action: PayloadAction<SearchReducerTypes['categories']>) => {\n      state.categories = action.payload;\n      state.error = '';\n    },\n    [getCategories.pending.type]: (state, action: PayloadAction<[]>) => {\n    },\n    [getCategories.rejected.type]: (state, action: PayloadAction<string>) => {\n      state.error = action.payload;\n    },\n  },\n\n});\n\nexport const {changeValueSearch} = SearchReducer.actions;\nexport default SearchReducer.reducer;\n","import {alpha, styled} from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport IconButton from '@mui/material/IconButton';\n\nexport const Search = styled('div')(({theme}) => ({\n  'position': 'relative',\n  'borderRadius': theme.shape.borderRadius,\n  'backgroundColor': alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  'marginLeft': 0,\n  'width': '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(1),\n    width: 'auto',\n  },\n}));\n\nexport const SearchIconWrapper = styled('div')(({theme}) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nexport const StyledInputBase = styled(InputBase)(({theme}) => ({\n  'color': 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      'width': '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nexport const MediaIconButton = styled(IconButton)(({theme}) => ({\n  [theme.breakpoints.up('md')]: {\n    display: 'none',\n  },\n}));\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport {useAppDispatch, useAppSelector} from '../../hooks/ReduxHooks';\nimport {changeValueSearch} from '../../store/Reducers/SearchReducer';\nimport {\n  MediaIconButton,\n  SearchIconWrapper,\n  StyledInputBase,\n  Search,\n} from './HeaderStyled';\nimport {searchAnimeData} from '../../modal/modalSearchAnime';\n\n\nexport const Header = () => {\n  const {value} = useAppSelector((state) => state.search);\n  const dispatch = useAppDispatch();\n\n  const changeValue = (e : React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(changeValueSearch(e.target.value));\n  };\n\n  const searchAnime = (e : React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      value.trim() && dispatch(searchAnimeData([value, 'text']));\n    }\n  };\n\n  return (\n    <Box sx={{flexGrow: 1}}>\n      <AppBar position=\"static\" sx={{\n        background: 'linear-gradient(90deg, #f598a8, #f6edb2)',\n      }}>\n        <Toolbar>\n          <MediaIconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            sx={{mr: 2}}\n          >\n            <MenuIcon/>\n          </MediaIconButton>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{flexGrow: 1, display: {xs: 'none', sm: 'block'}}}\n          >\n          Anime Library\n          </Typography>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon/>\n            </SearchIconWrapper>\n            <StyledInputBase\n              onChange={changeValue}\n              onKeyUp={searchAnime}\n              value={value}\n              placeholder=\"Search…\"\n              inputProps={{'aria-label': 'search'}}\n            />\n          </Search>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\n","import * as React from 'react';\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  SxProps,\n  Typography,\n} from '@mui/material';\nimport {memo} from 'react';\nimport {Link} from 'react-router-dom';\nimport {PageType} from '../../../store/Reducers/PageReducer';\n\n\nconst cardStyle : SxProps = {\n  actionArea: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n  },\n};\n\ntype viewCard = {\n  img: string\n  title: string\n  startDate: string\n  id: string\n  element: PageType\n  onPage: (element: PageType) => void\n}\n\n\nexport const ViewCard = ({img, title, startDate, id, element, onPage} : viewCard) => {\n  return (\n    <Card onClick={() => onPage(element)} id={id} sx={{flex: '0 0 32.5%'}}>\n      <Link style={{textDecoration: 'none', color: 'black'}} to={'/anime_library/' + title}>\n        <CardActionArea sx={cardStyle.actionArea}>\n          <img src={img}\n            style={{display: 'block', width: '100%'}}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n              {title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n            Start date : {startDate}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Link>\n    </Card>\n\n\n  );\n};\n\nexport const MemoViewCard = memo(ViewCard);\n","import React from 'react';\nimport {Box, Paper, Typography} from '@mui/material';\n\ntype Props = {\n  img: string,\n  title: string,\n  startDate: string,\n  episodeCount: number\n}\n\n\nexport const AnimePage = ({img, title, startDate, episodeCount}: Props) => {\n  return (\n    <Box sx={{display: 'flex', width: '100%'}}>\n      <Paper sx={{marginRight: '40px'}}>\n        <img style={{\n          display: 'block',\n          width: '100%',\n        }} src={img}/>\n      </Paper>\n      <Box>\n        <Typography variant={'h3'}>\n          {title}\n        </Typography>\n        <Typography variant={'subtitle2'}>\n         Start date: {startDate}\n        </Typography>\n        <Typography variant={'subtitle1'}>\n         Episode count: {episodeCount}\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\n\n\nexport type PageType = {\n  id: string,\n  attributes: {\n    description: string,\n    titles: {\n      en: string\n    }\n    canonicalTitle: string,\n    startDate: string,\n    popularityRank: number,\n    posterImage: {\n      small: string,\n      medium: string,\n      original: string\n    },\n    episodeCount: number\n  }\n}\n\n\ntype InitialState = {\n  currentPage : PageType | undefined\n}\n\n\nconst initialState: InitialState = {\n  currentPage: undefined,\n};\n\nexport const PageReducer = createSlice({\n  name: 'animePage',\n  initialState,\n  reducers: {\n    getCurrentPage: (state, action: PayloadAction<InitialState['currentPage']>) => {\n      state.currentPage = action.payload;\n    },\n  },\n});\n\n\nexport const {getCurrentPage} = PageReducer.actions;\nexport default PageReducer.reducer;\n","import * as React from 'react';\nimport {styled} from '@mui/material/styles';\nimport {\n  Box, LinearProgress,\n} from '@mui/material';\nimport {MemoViewCard} from './ViewCard/ViewCard';\nimport {useAppDispatch, useAppSelector} from '../../hooks/ReduxHooks';\nimport {useEffect} from 'react';\nimport {getAnimeData} from '../../modal/modalSearchAnime';\nimport {Route, Routes} from 'react-router-dom';\nimport {AnimePage} from './AnimePage';\nimport {getCurrentPage} from '../../store/Reducers/PageReducer';\n\nconst BodyContainer = styled(Box)(({theme}) => ({\n  position: 'relative',\n  backgroundColor: 'white',\n  padding: theme.spacing(1),\n  color: theme.palette.text.secondary,\n  boxShadow: '0px 2px 4px -1px rgb(0 0 0 / 20%),' +\n    ' 0px 4px 5px 0px rgb(0 0 0 / 14%),' +\n    ' 0px 1px 10px 0px rgb(0 0 0 / 12%)',\n  display: 'flex',\n  flexWrap: 'wrap',\n  gap: 10,\n}));\n\n\nexport const Body = () => {\n  const dispatch = useAppDispatch();\n  const {currentPage} = useAppSelector((state) => state.animePage);\n  const {animeData, loading} = useAppSelector((state) => state.search);\n\n  const Cards = animeData?.map((el) => (\n\n    <MemoViewCard key={el.id}\n      img={el.attributes.posterImage.small}\n      title={el.attributes.titles.en}\n      startDate={el.attributes.startDate}\n      id={el.id}\n      element={el}\n      onPage={(element) => dispatch(getCurrentPage(element))}\n    />\n\n  ));\n\n  useEffect(() => {\n    dispatch(getAnimeData());\n  }, []);\n\n  return (\n    <BodyContainer>\n      { loading &&\n      <div style={{position: 'absolute', left: 0, top: 0, width: '100%'}}>\n        <LinearProgress/>\n      </div>\n      }\n\n      <Routes>\n        <Route path={'/anime_library'} element={<>{Cards}</>}/>\n\n        {currentPage &&\n        <Route path={'/anime_library/:title'} element={\n          <AnimePage\n            img={currentPage.attributes.posterImage.small}\n            title={currentPage.attributes.titles.en}\n            startDate={currentPage.attributes.startDate}\n            episodeCount={currentPage.attributes.episodeCount}\n          />\n        }/>\n        }\n      </Routes>\n    </BodyContainer>\n  );\n};\n","import * as React from 'react';\nimport {styled} from '@mui/material/styles';\nimport {\n  Box,\n  List,\n  ListItemButton,\n  ListItemText,\n  Typography,\n} from '@mui/material';\nimport {FC, useEffect} from 'react';\nimport {useAppDispatch, useAppSelector} from '../../hooks/ReduxHooks';\nimport {getCategories, searchAnimeData} from '../../modal/modalSearchAnime';\n\nconst SideBarContainer = styled(Box)(({theme}) => ({\n  backgroundColor: 'white',\n  padding: `${theme.spacing(1)} 0`,\n  color: theme.palette.text.secondary,\n  boxShadow: '0px 2px 4px -1px rgb(0 0 0 / 20%),' +\n    ' 0px 4px 5px 0px rgb(0 0 0 / 14%),' +\n    ' 0px 1px 10px 0px rgb(0 0 0 / 12%)',\n}));\n\n\nexport const SideBar : FC = () => {\n  const {categories} = useAppSelector((state) => state.search);\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(getCategories());\n  }, []);\n  const searchAnimeFromCategories = (value: string) => {\n    dispatch(searchAnimeData([value, 'categories']));\n  };\n  const showCategories = categories?.data.map((el) => (\n    <ListItemButton onClick={() => searchAnimeFromCategories(el.attributes.title)} key={el.id}>\n      <ListItemText>\n        {el.attributes.title}\n      </ListItemText>\n    </ListItemButton>\n  ));\n\n  return (\n    <SideBarContainer>\n      <Typography variant={'h5'} sx={{padding: '0 8px'}}>\n        Categories\n      </Typography>\n      <List component=\"nav\" aria-label=\"secondary mailbox folder\">\n        {showCategories}\n      </List>\n    </SideBarContainer>\n  );\n};\n","import {Box, Container, Grid} from '@mui/material';\nimport React, {FC} from 'react';\nimport bgImg from './images/1.png';\nimport {Header} from './view/AppBar/Header';\nimport {Body} from './view/Body/Body';\nimport {SideBar} from './view/SideBar/SideBar';\n\nconst styles = {\n  paddingTop: '64px',\n  backgroundImage: `url(${bgImg})`,\n  backgroundColor: '#eee6e1',\n  width: '100%',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundAttachment: 'fixed',\n  backgroundPosition: '-400px -100px',\n};\n\n\nconst App: FC = () => {\n  return (\n    <Box sx={styles}>\n      <Container maxWidth={'lg'}>\n        <Header/>\n        <Grid container spacing={1}>\n          <Grid item xs={3}>\n            <SideBar/>\n          </Grid>\n          <Grid item xs={9}>\n            <Body/>\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n;\n\nexport default App;\n","import {configureStore} from '@reduxjs/toolkit';\nimport SearchReducer from './Reducers/SearchReducer';\nimport PageReducer from './Reducers/PageReducer';\n\nconst store = configureStore({\n  reducer: {\n    search: SearchReducer,\n    animePage: PageReducer,\n  },\n});\n\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {CssBaseline} from '@mui/material';\nimport {Provider} from 'react-redux';\nimport store from './store/Store';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n      <Router>\n        <CssBaseline/>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </Router>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n"],"sourceRoot":""}